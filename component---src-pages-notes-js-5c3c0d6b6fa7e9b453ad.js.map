{"version":3,"sources":["webpack:///./src/components/PostListing.js","webpack:///./src/pages/notes.js","webpack:///./src/components/base.js"],"names":["Container","styled","div","props","theme","colors","blueLight","Listing","article","PostListing","postEdges","postList","forEach","postEdge","push","path","node","frontmatter","slug","title","date","excerpt","getPostList","map","post","to","key","style","textDecoration","marginBottom","NotesPage","data","allMarkdownRemark","edges","Card","h1","headingColor","cardBackground","CardGrid","main","columns","BookCard","Tag","button"],"mappings":"4KAKMA,EAAYC,UAAOC,IAAV,4EAAGD,CAAH,yBAEF,SAACE,GAAD,OAAWA,EAAMC,MAAMC,OAAOC,aAIrCC,EAAUN,UAAOO,QAAV,0EAAGP,CAAH,mBA8CEQ,EAxCK,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UAkBfC,EAjBc,WAClB,IAAMA,EAAW,GAajB,OAZAD,EAAUE,SAAQ,SAACC,GACjBF,EAASG,KAAK,CACZC,KAAMF,EAASG,KAAKC,YAAYC,KAIhCC,MAAON,EAASG,KAAKC,YAAYE,MACjCC,KAAMP,EAASG,KAAKC,YAAYG,KAChCC,QAASR,EAASG,KAAKK,aAIpBV,EAGQW,GACjB,OACE,kBAACtB,EAAD,KACGW,EAASY,KAAI,SAACC,GAAD,OACZ,kBAAC,OAAD,CACEC,GAAID,EAAKT,KACTW,IAAKF,EAAKL,MACVQ,MAAO,CAAEC,eAAgB,SAEzB,kBAAC,IAAD,CAAMD,MAAO,CAAEE,aAAc,SAC3B,kBAACtB,EAAD,KACE,4BAAKiB,EAAKL,OACV,2BAAIK,EAAKJ,MACT,2BAAII,EAAKH,iB,YChBRS,UA1BG,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OAChB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKZ,MAAM,UACX,kBAAC,EAAD,CAAaT,UAAWqB,EAAKC,kBAAkBC,W,kCCTnD,wJAMaC,GAJUjC,UAAOkC,GAAV,gEAAGlC,CAAH,gBACT,SAACE,GAAD,OAAWA,EAAMC,MAAMC,OAAO+B,gBAGrBnC,UAAOC,IAAV,6DAAGD,CAAH,0QAKD,SAACE,GAAD,OAAWA,EAAMC,MAAMC,OAAOgC,mBAqBjCC,EAAWrC,UAAOsC,KAAV,iEAAGtC,CAAH,8JAEc,SAACE,GAAD,uBAAWA,EAAMqC,eAAjB,QAA4B,KASlDC,EAAWxC,kBAAOiC,GAAV,iEAAGjC,CAAH,gbAyCRyC,EAAMzC,UAAO0C,OAAV,4DAAG1C,CAAH","file":"component---src-pages-notes-js-5c3c0d6b6fa7e9b453ad.js","sourcesContent":["import React from 'react';\nimport { Link } from 'gatsby';\nimport styled from 'styled-components';\nimport { Card } from './base';\n\nconst Container = styled.div`\n  a:hover {\n    color: ${(props) => props.theme.colors.blueLight};\n  }\n`;\n\nconst Listing = styled.article`\n  h3 {\n    margin: 0;\n  }\n`;\n\nconst PostListing = ({ postEdges }) => {\n  const getPostList = () => {\n    const postList = [];\n    postEdges.forEach((postEdge) => {\n      postList.push({\n        path: postEdge.node.frontmatter.slug,\n        // tags: postEdge.node.frontmatter.tags,\n        // categories: postEdge.node.frontmatter.categories,\n        // cover: postEdge.node.frontmatter.cover,\n        title: postEdge.node.frontmatter.title,\n        date: postEdge.node.frontmatter.date,\n        excerpt: postEdge.node.excerpt,\n        // timeToRead: postEdge.node.timeToRead,\n      });\n    });\n    return postList;\n  };\n\n  const postList = getPostList();\n  return (\n    <Container>\n      {postList.map((post) => (\n        <Link\n          to={post.path}\n          key={post.title}\n          style={{ textDecoration: 'none' }}\n        >\n          <Card style={{ marginBottom: '1rem' }}>\n            <Listing>\n              <h3>{post.title}</h3>\n              <p>{post.date}</p>\n              <p>{post.excerpt}</p>\n            </Listing>\n          </Card>\n        </Link>\n      ))}\n    </Container>\n  );\n};\n\nexport default PostListing;\n","import { graphql } from \"gatsby\";\nimport React from \"react\";\nimport Layout from \"../components/layout\";\nimport PostListing from \"../components/PostListing\";\nimport SEO from \"../components/seo\";\n\nconst NotesPage = ({ data }) => (\n  <Layout>\n    <SEO title=\"notes\" />\n    <PostListing postEdges={data.allMarkdownRemark.edges} />\n  </Layout>\n);\n\nexport const pageQuery = graphql`\n  {\n    allMarkdownRemark(\n      filter: { frontmatter: { draft: { eq: false } } }\n      sort: { order: DESC, fields: [frontmatter___date] }\n      limit: 1000\n    ) {\n      edges {\n        node {\n          frontmatter {\n            slug\n            title\n            date\n          }\n        }\n      }\n    }\n  }\n`;\nexport default NotesPage;\n","import styled from 'styled-components';\n\nexport const Heading = styled.h1`\n  color: ${(props) => props.theme.colors.headingColor};\n`;\n\nexport const Card = styled.div`\n  width: auto;\n  height: fit-content;\n  padding: 1rem;\n  border-radius: 5px;\n  background: ${(props) => props.theme.colors.cardBackground};\n  transition: all 0.5s ease-out;\n  box-shadow: 0px 3px 15px rgba(0, 0, 0, 0.2);\n\n  &:hover {\n    transform: scale(1.02);\n  }\n\n  h1 {\n    font-size: 1.5em;\n    margin: 1rem 0 0 0;\n  }\n  h2 {\n    font-size: 1.2em;\n  }\n  p {\n    margin: 0;\n    font-size: 1em;\n  }\n`;\n\nexport const CardGrid = styled.main`\n  display: grid;\n  grid-template-columns: 'repeat(${(props) => props.columns ?? 2}, 1fr';\n  grid-gap: 1.5rem;\n\n  @media only screen and (max-width: 600px) {\n    grid-template-columns: auto;\n    grid-gap: 1rem;\n  }\n`;\n\nexport const BookCard = styled(Card)`\n  display: grid;\n  grid-gap: 1rem;\n  grid-template-areas:\n    'image title'\n    'image description';\n  grid-template-columns: 150px auto;\n\n  div {\n    grid-area: title;\n  }\n  h1 {\n    font-size: 1.5em;\n    margin: 0;\n  }\n  h2 {\n    font-size: 1.2em;\n  }\n  .description {\n    margin: 0;\n    font-size: 1em;\n    grid-area: description;\n  }\n\n  img {\n    width: 150px;\n    grid-area: image;\n  }\n\n  @media only screen and (max-width: 760px) {\n    grid-template-areas:\n      'image title'\n      'description description';\n    grid-template-columns: 75px auto;\n\n    img {\n      width: 75px;\n    }\n  }\n`;\n\nexport const Tag = styled.button`\n  font-family: 'Helvetica Neue';\n  font-size: 1em;\n  font-weight: 600;\n  padding: 0.25rem 0.5rem;\n  border-radius: 4px;\n  border: none;\n  cursor: pointer;\n  background: linear-gradient(\n    201deg,\n    rgba(0, 250, 154, 1) 3%,\n    rgba(30, 144, 255, 1) 56%\n  );\n\n  &:hover {\n    transform: scale(1.02);\n  }\n\n  &:disabled {\n    cursor: 'not-allowed';\n  }\n`;\n"],"sourceRoot":""}